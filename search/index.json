[{"content":"Introducción a plotly Plotly en una librería para visualización de datos, forma parte del proyecto Dash-Plotly el cual es un framework en python para elaborar dashboards, pero podemos hacer usos exclusivos de plotly para elaborar una gran variedad de graficas. En este post nos enfocaremos en la versión de plotly para Python, aunque también está disponible en R o JavaScript o Julia. Existen varias librerías populares para realizar gráficas, por mencionar algunas esta la clásica matlibplot, seaborn, altair la principal diferencia entra las antes mencionadas es que plotly permite elaborar gráficos interactivos lo que les dará un plus a tus visualizaciones. Aunque no es la única librería con estas capacidades, existe bokeh pero de ella hablaremos en otro post.\nInstalación. Bien ahora sí a lo que venimos. Instalar plotly es muy sencillo y lo haremos por medio de consola y pip ejecutando el siguiente código:\n1 pip install plotly==5.10.0 Ahora hablaremos un poco de como funciona, plotly trabaja de forma general con dos tipos de objetos:\ngraph_objects: Figuras tipo plotly.express: objetos de Plotly Express El módulo graph_objects es el principal sobre el cual funciona plotly, nos permite un control total sobre todo los elementos de un gráfico con lo cual podremos personalizar a gusto nuestras visualizaciones, mientras que los objetos de plotly.express permite generar gráficas de manera rápida y con poco código, aunque está limitada en cuanto funcionalidad. Mi recomendación es usar siempre graph_objects.\nUsando plotly Primero importaremos plotly mediante graph_objects y pandas para manipular algunos datos.\n1 2 import plotly.graph_objects as go import pandas as pd Ahora creamos un dataframe con números aleatorios y crearemos un variable llamada fig donde primero declararemos un objeto tipo Figure y como argumento llamamos a la función go.Scatter() la cual nos servirá para crear una gráfica de línea:\n1 2 3 4 x = list(range(0,20)) y = np.random.randint(50, size=20) fig = go.Figure(data=go.Scatter(x=x, y=y)) fig.show() Ahora creamos un dataframe con números aleatorios y crearemos un variable llamada fig donde primero declararemos un objeto tipo Figure y como argumento llamamos a la función go.Scatter() la cual nos servirá para crear una gráfica de línea:\nsin cambios asjdnak sdaojsndkn kasd kans d\n","date":"2022-08-11T00:00:00Z","image":"https://orihuela-iom.github.io/DataBlog/p/introducci%C3%B3n-a-plotly/cover_hu4eef72f89f1fb001c2ba0c920fbf1b3b_391080_120x120_fill_box_smart1_3.png","permalink":"https://orihuela-iom.github.io/DataBlog/p/introducci%C3%B3n-a-plotly/","title":"Introducción a plotly"}]